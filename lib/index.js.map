{"version":3,"sources":["../src/index.js"],"names":["test","mongoose","version","Promise","connect","jest","fn","mockImplementation","resolve","createConnection","mockReturnValue","on","once","then","catch","model","bind","ops","mockedReturn","cb","op","modelName","_mongooseOptions","Model","mock","mockingoose","__mocks","err","Error","includes","Array","isArray","map","item","lean","toObject","reject","forEach","Query","prototype","criteria","doc","options","callback","arguments","length","undefined","exec","call","Aggregate","_model","aggregate","instance","methodName","constructor","Object","assign","hooks","execPre","ret","execPost","doMock","target","resetAll","toJSON","traps","get","prop","hasOwnProperty","Reflect","toReturn","o","reset","Proxy"],"mappings":"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","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\n\nif(!/^5/.test(mongoose.version)) mongoose.Promise = Promise;\n\nmongoose.connect = jest.fn().mockImplementation(() => Promise.resolve());\nmongoose.createConnection = jest\n  .fn()\n  .mockReturnValue({\n    on: jest.fn(),\n    once: jest.fn(),\n    then(resolve) { return Promise.resolve(resolve(this)); },\n    catch() {},\n    model: mongoose.model.bind(mongoose),\n  });\n\nconst ops = [\n  'find',\n  'findOne',\n  'count',\n  'countDocuments',\n  'estimatedDocumentCount',\n  'distinct',\n  'findOneAndUpdate',\n  'findOneAndRemove',\n  'remove',\n  'update',\n  'deleteOne',\n  'deleteMany',\n];\n\nconst mockedReturn = function (cb) {\n  const { op, model: { modelName }, _mongooseOptions = {} } = this;\n  const Model = mongoose.model(modelName);\n\n  let mock = mockingoose.__mocks[modelName] && mockingoose.__mocks[modelName][op];\n\n  let err = null;\n\n  if (mock instanceof Error) err = mock;\n\n  if (!mock && op === 'save') { mock = this;}\n\n  if (mock && mock instanceof Model === false && (!['update', 'count', 'countDocuments', 'estimatedDocumentCount'].includes(op))) {\n    mock = Array.isArray(mock) ? mock.map(item => new Model(item)) : new Model(mock);\n\n    if (_mongooseOptions.lean) mock = Array.isArray(mock) ? mock.map(item => item.toObject()) : mock.toObject();\n  }\n\n  if (cb) return cb(err, mock);\n\n  if (err) return Promise.reject(err);\n\n  return Promise.resolve(mock);\n};\n\nops.forEach(op => {\n  mongoose.Query.prototype[op] = jest.fn().mockImplementation(function (criteria, doc, options, callback) {\n    switch (arguments.length) {\n      case 4:\n      case 3:\n        if (typeof options === 'function') {\n          callback = options;\n          options = {};\n        }\n        break;\n      case 2:\n        if (typeof doc === 'function') {\n          callback = doc;\n          doc = criteria;\n          criteria = undefined;\n        }\n        options = undefined;\n        break;\n      case 1:\n        if (typeof criteria === 'function') {\n          callback = criteria;\n          criteria = options = doc = undefined;\n        } else {\n          doc = criteria;\n          criteria = options = undefined;\n        }\n    }\n\n    this.op = op;\n\n    if (!callback) return this;\n\n    return this.exec.call(this, callback);\n  });\n});\n\nmongoose.Query.prototype.exec = jest.fn().mockImplementation(function cb(cb) {\n  return mockedReturn.call(this, cb);\n});\n\nmongoose.Aggregate.prototype.exec = jest.fn().mockImplementation(function cb(cb) {\n\tconst { _model: { modelName } } = this;\n\n\tlet mock = mockingoose.__mocks[modelName] && mockingoose.__mocks[modelName].aggregate;\n\n\tlet err = null;\n\n\tif (mock instanceof Error) err = mock;\n\n\tif (cb) return cb(err, mock);\n\n\tif (err) return Promise.reject(err);\n\n\treturn Promise.resolve(mock);\n});\n\nconst instance = [\n  'remove',\n  'save'\n];\n\ninstance.forEach(methodName => {\n  mongoose.Model.prototype[methodName] = jest.fn().mockImplementation(function (options, cb) {\n    const op = methodName;\n    const { modelName } = this.constructor;\n\n    if (typeof options === 'function') cb = options;\n\n    Object.assign(this, { op, model: { modelName } });\n\n    const hooks = this.constructor.hooks\n\n    return new Promise((resolve, reject) => {\n      hooks.execPre(op, this, [cb], (err) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        const ret = mockedReturn.call(this, cb);\n\n        if (cb) {\n          hooks.execPost(op, this, [ret], (err) => {\n            if (err) {\n              reject(err);\n              return;\n            }\n\n            resolve(ret);\n          });\n        } else {\n          ret\n            .then((ret) => {\n              hooks.execPost(op, this, [ret], (err) => {\n                if (err) {\n                  reject(err);\n                  return;\n                }\n\n                resolve(ret);\n              });\n            })\n            .catch(reject);\n        }\n      });\n    });\n  });\n});\n\njest.doMock('mongoose', () => mongoose);\n\nconst target = {\n  __mocks: {},\n  resetAll() { this.__mocks = {}; },\n  toJSON() { return this.__mocks; },\n};\n\nconst traps = {\n  get(target, prop) {\n    if (target.hasOwnProperty(prop)) return Reflect.get(target, prop);\n\n    return {\n      toReturn(o, op = 'find') {\n        target.__mocks.hasOwnProperty(prop)\n          ? target.__mocks[prop][op] = o\n          : target.__mocks[prop] = { [op]: o };\n\n        return this;\n      },\n\n      reset(op) {\n        op && delete target.__mocks[prop][op] || delete target.__mocks[prop];\n\n        return this;\n      },\n\n      toJSON() {\n        return target.__mocks[prop] || {};\n      },\n    };\n  },\n};\n\nconst mockingoose = new Proxy(target, traps);\n\nexport default mockingoose;\n"]}