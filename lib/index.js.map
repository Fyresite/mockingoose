{"version":3,"sources":["../src/index.js"],"names":["test","version","Promise","connect","jest","fn","mockImplementation","resolve","createConnection","mockReturnValue","on","once","then","catch","model","bind","ops","mockedReturn","cb","op","modelName","_mongooseOptions","Model","mock","mockingoose","__mocks","err","Error","includes","Array","isArray","map","item","lean","toObject","reject","forEach","Query","prototype","criteria","doc","options","callback","arguments","length","undefined","exec","call","save","constructor","Object","assign","doMock","target","resetAll","toJSON","traps","get","prop","hasOwnProperty","Reflect","toReturn","o","reset","Proxy"],"mappings":"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","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\r\n\r\nif(!/^5/.test(mongoose.version)) mongoose.Promise = Promise;\r\n\r\nmongoose.connect = jest.fn().mockImplementation(() => Promise.resolve());\r\nmongoose.createConnection = jest\r\n  .fn()\r\n  .mockReturnValue({\r\n    on: jest.fn(),\r\n    once: jest.fn(),\r\n    then(resolve) { return Promise.resolve(resolve(this)); },\r\n    catch() {},\r\n    model: mongoose.model.bind(mongoose),\r\n  });\r\n\r\nconst ops = [\r\n  'find',\r\n  'findOne',\r\n  'count',\r\n  'distinct',\r\n  'findOneAndUpdate',\r\n  'findOneAndRemove',\r\n  'remove',\r\n  'deleteOne',\r\n  'deleteMany',\r\n];\r\n\r\nconst mockedReturn = function (cb) {\r\n  const { op, model: { modelName }, _mongooseOptions = {} } = this;\r\n  const Model = mongoose.model(modelName);\r\n\r\n  let mock = mockingoose.__mocks[modelName] && mockingoose.__mocks[modelName][op];\r\n\r\n  let err = null;\r\n\r\n  if (mock instanceof Error) err = mock;\r\n\r\n  if (!mock && op === 'save') { mock = this;}\r\n\r\n  if (mock && mock instanceof Model === false && (!['update', 'count'].includes(op))) {\r\n    mock = Array.isArray(mock) ? mock.map(item => new Model(item)) : new Model(mock);\r\n\r\n    if (_mongooseOptions.lean) mock = Array.isArray(mock) ? mock.map(item => item.toObject()) : mock.toObject();\r\n  }\r\n\r\n  if (cb) return cb(err, mock);\r\n\r\n  if (err) return Promise.reject(err);\r\n\r\n  return Promise.resolve(mock);\r\n};\r\n\r\nops.forEach(op => {\r\n  mongoose.Query.prototype[op] = jest.fn().mockImplementation(function (criteria, doc, options, callback) {\r\n    switch (arguments.length) {\r\n      case 3:\r\n        if (typeof options === 'function') {\r\n          callback = options;\r\n          options = {};\r\n        }\r\n        break;\r\n      case 2:\r\n        if (typeof doc === 'function') {\r\n          callback = doc;\r\n          doc = criteria;\r\n          criteria = undefined;\r\n        }\r\n        options = undefined;\r\n        break;\r\n      case 1:\r\n        if (typeof criteria === 'function') {\r\n          callback = criteria;\r\n          criteria = options = doc = undefined;\r\n        } else {\r\n          doc = criteria;\r\n          criteria = options = undefined;\r\n        }\r\n    }\r\n\r\n    this.op = op;\r\n\r\n    if (!callback) return this;\r\n\r\n    return this.exec.call(this, callback);\r\n  });\r\n});\r\n\r\nmongoose.Query.prototype.exec = jest.fn().mockImplementation(function cb(cb) {\r\n  return mockedReturn.call(this, cb);\r\n});\r\n\r\nmongoose.Model.prototype.save = jest.fn().mockImplementation(function (options, cb) {\r\n  const op = 'save';\r\n  const { modelName } = this.constructor;\r\n\r\n  if (typeof options === 'function') cb = options;\r\n\r\n  Object.assign(this, { op, model: { modelName } });\r\n\r\n  return mockedReturn.call(this, cb);\r\n});\r\n\r\njest.doMock('mongoose', () => mongoose);\r\n\r\nconst target = {\r\n  __mocks: {},\r\n  resetAll() { this.__mocks = {}; },\r\n  toJSON() { return this.__mocks; },\r\n};\r\n\r\nconst traps = {\r\n  get(target, prop) {\r\n    if (target.hasOwnProperty(prop)) return Reflect.get(target, prop);\r\n\r\n    return {\r\n      toReturn(o, op = 'find') {\r\n        target.__mocks.hasOwnProperty(prop)\r\n          ? target.__mocks[prop][op] = o\r\n          : target.__mocks[prop] = { [op]: o };\r\n\r\n        return this;\r\n      },\r\n\r\n      reset(op) {\r\n        op && delete target.__mocks[prop][op] || delete target.__mocks[prop];\r\n\r\n        return this;\r\n      },\r\n\r\n      toJSON() {\r\n        return target.__mocks[prop] || {};\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nconst mockingoose = new Proxy(target, traps);\r\n\r\nexport default mockingoose;\r\n"]}