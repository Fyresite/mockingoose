{"version":3,"sources":["../src/index.js"],"names":["mongoose","require","test","version","Promise","connect","jest","fn","mockImplementation","resolve","createConnection","mockReturnValue","model","bind","on","once","then","ops","mockedReturn","cb","op","modelName","_mongooseOptions","Model","mock","mockingoose","__mocks","err","Error","includes","Array","isArray","map","item","lean","toObject","forEach","Query","prototype","criteria","doc","options","callback","merge","arguments","length","undefined","exec","call","Aggregate","_model","aggregate","instance","methodName","constructor","Object","assign","hooks","reject","execPre","ret","execPost","err2","ret2","err3","doMock","proxyTarget","resetAll","toJSON","getMockController","prop","toReturn","o","hasOwnProperty","reset","proxyTraps","get","target","Reflect","apply","thisArg","mockModel","Proxy","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAI,CAAC,KAAKC,IAAL,CAAUF,QAAQ,CAACG,OAAnB,CAAL,EAAkC;AAChCH,EAAAA,QAAQ,CAACI,OAAT,GAAmBA,OAAnB;AACD;;AAEDJ,QAAQ,CAACK,OAAT,GAAmBC,IAAI,CACpBC,EADgB,GAEhBC,kBAFgB,CAEG;AAAA,SAAMJ,OAAO,CAACK,OAAR,EAAN;AAAA,CAFH,CAAnB;AAIAT,QAAQ,CAACU,gBAAT,GAA4BJ,IAAI,CAACC,EAAL,GAAUI,eAAV,CAA0B;AAAA,6BAC5C;AACN;AACD,GAHmD;AAIpDC,EAAAA,KAAK,EAAEZ,QAAQ,CAACY,KAAT,CAAeC,IAAf,CAAoBb,QAApB,CAJ6C;AAKpDc,EAAAA,EAAE,EAAER,IAAI,CAACC,EAAL,EALgD;AAMpDQ,EAAAA,IAAI,EAAET,IAAI,CAACC,EAAL,EAN8C;AAOpDS,EAAAA,IAPoD,gBAO/CP,OAP+C,EAOtC;AACZ,WAAOL,OAAO,CAACK,OAAR,CAAgBA,OAAO,CAAC,IAAD,CAAvB,CAAP;AACD;AATmD,CAA1B,CAA5B;AAYA,IAAMQ,GAAG,GAAG,CACV,MADU,EAEV,SAFU,EAGV,OAHU,EAIV,gBAJU,EAKV,wBALU,EAMV,UANU,EAOV,kBAPU,EAQV,kBARU,EASV,kBATU,EAUV,mBAVU,EAWV,QAXU,EAYV,QAZU,EAaV,WAbU,EAcV,YAdU,EAeV,WAfU,EAgBV,YAhBU,EAiBV,MAjBU,EAkBV,WAlBU,CAAZ;;AAqBA,IAAMC,YAAY;AAAA,qEAAG,iBAAeC,EAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEjBC,YAAAA,EAFiB,GAKf,IALe,CAEjBA,EAFiB,EAGRC,SAHQ,GAKf,IALe,CAGjBT,KAHiB,CAGRS,SAHQ,0BAKf,IALe,CAIjBC,gBAJiB,EAIjBA,gBAJiB,sCAIE,EAJF;AAMbC,YAAAA,KANa,GAMLvB,QAAQ,CAACY,KAAT,CAAeS,SAAf,CANK;AAQfG,YAAAA,IARe,GASjBC,WAAW,CAACC,OAAZ,CAAoBL,SAApB,KAAkCI,WAAW,CAACC,OAAZ,CAAoBL,SAApB,EAA+BD,EAA/B,CATjB;AAWfO,YAAAA,GAXe,GAWT,IAXS;;AAanB,gBAAIH,IAAI,YAAYI,KAApB,EAA2B;AACzBD,cAAAA,GAAG,GAAGH,IAAN;AACD;;AAfkB,kBAiBf,OAAOA,IAAP,KAAgB,UAjBD;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAkBJA,IAAI,CAAC,IAAD,CAlBA;;AAAA;AAkBjBA,YAAAA,IAlBiB;;AAAA;AAqBnB,gBAAI,CAACA,IAAD,IAASJ,EAAE,KAAK,MAApB,EAA4B;AAC1BI,cAAAA,IAAI,GAAG,IAAP;AACD;;AAED,gBACEA,IAAI,IACJ,EAAEA,IAAI,YAAYD,KAAlB,CADA,IAEA,CAAC,CACC,QADD,EAEC,WAFD,EAGC,YAHD,EAIC,OAJD,EAKC,gBALD,EAMC,wBAND,EAOC,UAPD,EAQCM,QARD,CAQUT,EARV,CAHH,EAYE;AACAI,cAAAA,IAAI,GAAGM,KAAK,CAACC,OAAN,CAAcP,IAAd,IACHA,IAAI,CAACQ,GAAL,CAAS,UAAAC,IAAI;AAAA,uBAAI,IAAIV,KAAJ,CAAUU,IAAV,CAAJ;AAAA,eAAb,CADG,GAEH,IAAIV,KAAJ,CAAUC,IAAV,CAFJ;;AAIA,kBAAIF,gBAAgB,CAACY,IAArB,EAA2B;AACzBV,gBAAAA,IAAI,GAAGM,KAAK,CAACC,OAAN,CAAcP,IAAd,IACHA,IAAI,CAACQ,GAAL,CAAS,UAAAC,IAAI;AAAA,yBAAIA,IAAI,CAACE,QAAL,EAAJ;AAAA,iBAAb,CADG,GAEHX,IAAI,CAACW,QAAL,EAFJ;AAGD;AACF;;AA/CkB,iBAiDfhB,EAjDe;AAAA;AAAA;AAAA;;AAAA,6CAkDVA,EAAE,CAACQ,GAAD,EAAMH,IAAN,CAlDQ;;AAAA;AAAA,iBAqDfG,GArDe;AAAA;AAAA;AAAA;;AAAA,kBAsDXA,GAtDW;;AAAA;AAAA,6CAyDZH,IAzDY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZN,YAAY;AAAA;AAAA;AAAA,GAAlB;;AA4DAD,GAAG,CAACmB,OAAJ,CAAY,UAAAhB,EAAE,EAAI;AAChBpB,EAAAA,QAAQ,CAACqC,KAAT,CAAeC,SAAf,CAAyBlB,EAAzB,IAA+Bd,IAAI,CAChCC,EAD4B,GAE5BC,kBAF4B,CAET,UAAS+B,QAAT,EAAmBC,GAAnB,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2C;AAC7D,QACE,CACE,MADF,EAEE,SAFF,EAGE,OAHF,EAIE,gBAJF,EAKE,QALF,EAME,WANF,EAOE,YAPF,EAQE,kBARF,EASE,kBATF,EAUE,kBAVF,EAWE,mBAXF,EAYEb,QAZF,CAYWT,EAZX,KAaA,OAAOmB,QAAP,KAAoB,UAdtB,EAeE;AACA;AACA;AACA,WAAKI,KAAL,CAAWJ,QAAX;AACD;;AAED,QAAI,CAAC,UAAD,EAAaV,QAAb,CAAsBT,EAAtB,KAA6B,OAAOoB,GAAP,KAAe,UAAhD,EAA4D;AAC1D;AACA,WAAKG,KAAL,CAAWH,GAAX;AACD;;AAED,YAAQI,SAAS,CAACC,MAAlB;AACE,WAAK,CAAL;AACA,WAAK,CAAL;AACE,YAAI,OAAOJ,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,UAAAA,QAAQ,GAAGD,OAAX;AACAA,UAAAA,OAAO,GAAG,EAAV;AACD;;AACD;;AACF,WAAK,CAAL;AACE,YAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;AAC7BE,UAAAA,QAAQ,GAAGF,GAAX;AACAA,UAAAA,GAAG,GAAGD,QAAN;AACAA,UAAAA,QAAQ,GAAGO,SAAX;AACD;;AACDL,QAAAA,OAAO,GAAGK,SAAV;AACA;;AACF,WAAK,CAAL;AACE,YAAI,OAAOP,QAAP,KAAoB,UAAxB,EAAoC;AAClCG,UAAAA,QAAQ,GAAGH,QAAX;AACAA,UAAAA,QAAQ,GAAGE,OAAO,GAAGD,GAAG,GAAGM,SAA3B;AACD,SAHD,MAGO;AACLN,UAAAA,GAAG,GAAGD,QAAN;AACAA,UAAAA,QAAQ,GAAGE,OAAO,GAAGK,SAArB;AACD;;AAvBL;;AA0BA,SAAK1B,EAAL,GAAUA,EAAV;;AAEA,QAAI,CAACsB,QAAL,EAAe;AACb,aAAO,IAAP;AACD;;AAED,WAAO,KAAKK,IAAL,CAAUC,IAAV,CAAe,IAAf,EAAqBN,QAArB,CAAP;AACD,GA9D4B,CAA/B;AA+DD,CAhED;AAkEA1C,QAAQ,CAACqC,KAAT,CAAeC,SAAf,CAAyBS,IAAzB,GAAgCzC,IAAI,CAACC,EAAL,GAAUC,kBAAV,CAA6B,UAASW,EAAT,EAAa;AACxE,SAAOD,YAAY,CAAC8B,IAAb,CAAkB,IAAlB,EAAwB7B,EAAxB,CAAP;AACD,CAF+B,CAAhC;AAIAnB,QAAQ,CAACiD,SAAT,CAAmBX,SAAnB,CAA6BS,IAA7B,GAAoCzC,IAAI,CACrCC,EADiC,GAEjCC,kBAFiC;AAAA,sEAEd,kBAAeW,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAENE,YAAAA,SAFM,GAGd,IAHc,CAEhB6B,MAFgB,CAEN7B,SAFM;AAKdG,YAAAA,IALc,GAMhBC,WAAW,CAACC,OAAZ,CAAoBL,SAApB,KACAI,WAAW,CAACC,OAAZ,CAAoBL,SAApB,EAA+B8B,SAPf;AASdxB,YAAAA,GATc,GASR,IATQ;;AAWlB,gBAAIH,IAAI,YAAYI,KAApB,EAA2B;AACzBD,cAAAA,GAAG,GAAGH,IAAN;AACD;;AAbiB,kBAed,OAAOA,IAAP,KAAgB,UAfF;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgBHA,IAAI,CAAC,IAAD,CAhBD;;AAAA;AAgBhBA,YAAAA,IAhBgB;;AAAA;AAAA,iBAmBdL,EAnBc;AAAA;AAAA;AAAA;;AAAA,8CAoBTA,EAAE,CAACQ,GAAD,EAAMH,IAAN,CApBO;;AAAA;AAAA,iBAuBdG,GAvBc;AAAA;AAAA;AAAA;;AAAA,kBAwBVA,GAxBU;;AAAA;AAAA,8CA2BXH,IA3BW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFc;;AAAA;AAAA;AAAA;AAAA,IAApC;AAgCA,IAAM4B,QAAQ,GAAG,CAAC,QAAD,EAAW,MAAX,CAAjB;AAEAA,QAAQ,CAAChB,OAAT,CAAiB,UAAAiB,UAAU,EAAI;AAC7BrD,EAAAA,QAAQ,CAACuB,KAAT,CAAee,SAAf,CAAyBe,UAAzB,IAAuC/C,IAAI,CACxCC,EADoC,GAEpCC,kBAFoC,CAEjB,UAASiC,OAAT,EAAkBtB,EAAlB,EAAsB;AAAA;;AACxC,QAAMC,EAAE,GAAGiC,UAAX;AADwC,QAEhChC,SAFgC,GAElB,KAAKiC,WAFa,CAEhCjC,SAFgC;;AAIxC,QAAI,OAAOoB,OAAP,KAAmB,UAAvB,EAAmC;AACjCtB,MAAAA,EAAE,GAAGsB,OAAL;AACD;;AAEDc,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoB;AAAEpC,MAAAA,EAAE,EAAFA,EAAF;AAAMR,MAAAA,KAAK,EAAE;AAAES,QAAAA,SAAS,EAATA;AAAF;AAAb,KAApB;AAEA,QAAMoC,KAAK,GAAG,KAAKH,WAAL,CAAiBG,KAA/B;AAEA,WAAO,IAAIrD,OAAJ,CAAY,UAACK,OAAD,EAAUiD,MAAV,EAAqB;AACtCD,MAAAA,KAAK,CAACE,OAAN,CAAcvC,EAAd,EAAkB,KAAlB,EAAwB,CAACD,EAAD,CAAxB,EAA8B,UAAAQ,GAAG,EAAI;AACnC,YAAIA,GAAJ,EAAS;AACP+B,UAAAA,MAAM,CAAC/B,GAAD,CAAN;AACA;AACD;;AAED,YAAMiC,GAAG,GAAG1C,YAAY,CAAC8B,IAAb,CAAkB,KAAlB,EAAwB7B,EAAxB,CAAZ;;AAEA,YAAIA,EAAJ,EAAQ;AACNsC,UAAAA,KAAK,CAACI,QAAN,CAAezC,EAAf,EAAmB,KAAnB,EAAyB,CAACwC,GAAD,CAAzB,EAAgC,UAAAE,IAAI,EAAI;AACtC,gBAAIA,IAAJ,EAAU;AACRJ,cAAAA,MAAM,CAACI,IAAD,CAAN;AACA;AACD;;AAEDrD,YAAAA,OAAO,CAACmD,GAAD,CAAP;AACD,WAPD;AAQD,SATD,MASO;AACLA,UAAAA,GAAG,CACA5C,IADH,CACQ,UAAA+C,IAAI,EAAI;AACZN,YAAAA,KAAK,CAACI,QAAN,CAAezC,EAAf,EAAmB,KAAnB,EAAyB,CAAC2C,IAAD,CAAzB,EAAiC,UAAAC,IAAI,EAAI;AACvC,kBAAIA,IAAJ,EAAU;AACRN,gBAAAA,MAAM,CAACM,IAAD,CAAN;AACA;AACD;;AAEDvD,cAAAA,OAAO,CAACsD,IAAD,CAAP;AACD,aAPD;AAQD,WAVH,WAWSL,MAXT;AAYD;AACF,OA/BD;AAgCD,KAjCM,CAAP;AAkCD,GAhDoC,CAAvC;AAiDD,CAlDD;AAoDApD,IAAI,CAAC2D,MAAL,CAAY,UAAZ,EAAwB;AAAA,SAAMjE,QAAN;AAAA,CAAxB,E,CAEA;;AACA,IAAMkE,WAAW,GAAGX,MAAM,CAACC,MAAP,CAAc;AAAA,SAAM,KAAK,CAAX;AAAA,CAAd,EAA4B;AAC9C9B,EAAAA,OAAO,EAAE,EADqC;AAE9CyC,EAAAA,QAF8C,sBAEnC;AACT,SAAKzC,OAAL,GAAe,EAAf;AACD,GAJ6C;AAK9C0C,EAAAA,MAL8C,oBAKrC;AACP,WAAO,KAAK1C,OAAZ;AACD;AAP6C,CAA5B,CAApB;;AAUA,IAAM2C,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,IAAI,EAAI;AAChC,SAAO;AACLC,IAAAA,QADK,oBACIC,CADJ,EACoB;AAAA,UAAbpD,EAAa,uEAAR,MAAQ;AACvB8C,MAAAA,WAAW,CAACxC,OAAZ,CAAoB+C,cAApB,CAAmCH,IAAnC,IACKJ,WAAW,CAACxC,OAAZ,CAAoB4C,IAApB,EAA0BlD,EAA1B,IAAgCoD,CADrC,GAEKN,WAAW,CAACxC,OAAZ,CAAoB4C,IAApB,wBAA+BlD,EAA/B,EAAoCoD,CAApC,CAFL;AAIA,aAAO,IAAP;AACD,KAPI;AASLE,IAAAA,KATK,iBASCtD,EATD,EASK;AACR,UAAIA,EAAJ,EAAQ;AACN,eAAO8C,WAAW,CAACxC,OAAZ,CAAoB4C,IAApB,EAA0BlD,EAA1B,CAAP;AACD,OAFD,MAEO;AACL,eAAO8C,WAAW,CAACxC,OAAZ,CAAoB4C,IAApB,CAAP;AACD;;AAED,aAAO,IAAP;AACD,KAjBI;AAmBLF,IAAAA,MAnBK,oBAmBI;AACP,aAAOF,WAAW,CAACxC,OAAZ,CAAoB4C,IAApB,KAA6B,EAApC;AACD;AArBI,GAAP;AAuBD,CAxBD;;AA0BA,IAAMK,UAAU,GAAG;AACjBC,EAAAA,GADiB,eACbC,MADa,EACLP,IADK,EACC;AAChB,QAAIO,MAAM,CAACJ,cAAP,CAAsBH,IAAtB,CAAJ,EAAiC;AAC/B,aAAOQ,OAAO,CAACF,GAAR,CAAYC,MAAZ,EAAoBP,IAApB,CAAP;AACD;;AAED,WAAOD,iBAAiB,CAACC,IAAD,CAAxB;AACD,GAPgB;AAQjBS,EAAAA,KAAK,EAAE,eAACF,MAAD,EAASG,OAAT;AAAA;AAAA,QAAmBV,IAAnB;;AAAA,WAA6BW,SAAS,CAACX,IAAD,CAAtC;AAAA;AARU,CAAnB;AAWA,IAAM7C,WAAW,GAAG,IAAIyD,KAAJ,CAAUhB,WAAV,EAAuBS,UAAvB,CAApB;AAEA;AACA;AACA;;AACA,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACrE,KAAD,EAAW;AAC3B,MAAMS,SAAS,GAAG,OAAOT,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACS,SAApC,GAAgDT,KAAlE;;AACA,MAAI,OAAOS,SAAP,KAAqB,QAAzB,EAAmC;AACjC,WAAOgD,iBAAiB,CAAChD,SAAD,CAAxB;AACD,GAFD,MAEO;AACL,UAAM,IAAIO,KAAJ,CAAU,0CAAV,CAAN;AACD;AACF,CAPD;;AASAuD,MAAM,CAACC,OAAP,GAAiB3D,WAAjB","sourcesContent":["const mongoose = require('mongoose');\n\nif (!/^5/.test(mongoose.version)) {\n  mongoose.Promise = Promise;\n}\n\nmongoose.connect = jest\n  .fn()\n  .mockImplementation(() => Promise.resolve());\n\nmongoose.createConnection = jest.fn().mockReturnValue({\n  catch() {\n    /* no op */\n  },\n  model: mongoose.model.bind(mongoose),\n  on: jest.fn(),\n  once: jest.fn(),\n  then(resolve) {\n    return Promise.resolve(resolve(this));\n  },\n});\n\nconst ops = [\n  'find',\n  'findOne',\n  'count',\n  'countDocuments',\n  'estimatedDocumentCount',\n  'distinct',\n  'findOneAndUpdate',\n  'findOneAndDelete',\n  'findOneAndRemove',\n  'findOneAndReplace',\n  'remove',\n  'update',\n  'updateOne',\n  'updateMany',\n  'deleteOne',\n  'deleteMany',\n  'save',\n  'aggregate',\n];\n\nconst mockedReturn = async function(cb) {\n  const {\n    op,\n    model: { modelName },\n    _mongooseOptions = {},\n  } = this;\n  const Model = mongoose.model(modelName);\n\n  let mock =\n    mockingoose.__mocks[modelName] && mockingoose.__mocks[modelName][op];\n\n  let err = null;\n\n  if (mock instanceof Error) {\n    err = mock;\n  }\n\n  if (typeof mock === 'function') {\n    mock = await mock(this);\n  }\n\n  if (!mock && op === 'save') {\n    mock = this;\n  }\n\n  if (\n    mock &&\n    !(mock instanceof Model) &&\n    ![\n      'update',\n      'updateOne',\n      'updateMany',\n      'count',\n      'countDocuments',\n      'estimatedDocumentCount',\n      'distinct',\n    ].includes(op)\n  ) {\n    mock = Array.isArray(mock)\n      ? mock.map(item => new Model(item))\n      : new Model(mock);\n\n    if (_mongooseOptions.lean) {\n      mock = Array.isArray(mock)\n        ? mock.map(item => item.toObject())\n        : mock.toObject();\n    }\n  }\n\n  if (cb) {\n    return cb(err, mock);\n  }\n\n  if (err) {\n    throw err;\n  }\n\n  return mock;\n};\n\nops.forEach(op => {\n  mongoose.Query.prototype[op] = jest\n    .fn()\n    .mockImplementation(function(criteria, doc, options, callback) {\n      if (\n        [\n          'find',\n          'findOne',\n          'count',\n          'countDocuments',\n          'remove',\n          'deleteOne',\n          'deleteMany',\n          'findOneAndUpdate',\n          'findOneAndRemove',\n          'findOneAndDelete',\n          'findOneAndReplace',\n        ].includes(op) &&\n        typeof criteria !== 'function'\n      ) {\n        // find and findOne can take conditions as the first paramter\n        // ensure they make it into the Query conditions\n        this.merge(criteria);\n      }\n\n      if (['distinct'].includes(op) && typeof doc !== 'function') {\n        // distinct has the conditions as the second parameter\n        this.merge(doc);\n      }\n\n      switch (arguments.length) {\n        case 4:\n        case 3:\n          if (typeof options === 'function') {\n            callback = options;\n            options = {};\n          }\n          break;\n        case 2:\n          if (typeof doc === 'function') {\n            callback = doc;\n            doc = criteria;\n            criteria = undefined;\n          }\n          options = undefined;\n          break;\n        case 1:\n          if (typeof criteria === 'function') {\n            callback = criteria;\n            criteria = options = doc = undefined;\n          } else {\n            doc = criteria;\n            criteria = options = undefined;\n          }\n      }\n\n      this.op = op;\n\n      if (!callback) {\n        return this;\n      }\n\n      return this.exec.call(this, callback);\n    });\n});\n\nmongoose.Query.prototype.exec = jest.fn().mockImplementation(function(cb) {\n  return mockedReturn.call(this, cb);\n});\n\nmongoose.Aggregate.prototype.exec = jest\n  .fn()\n  .mockImplementation(async function(cb) {\n    const {\n      _model: { modelName },\n    } = this;\n\n    let mock =\n      mockingoose.__mocks[modelName] &&\n      mockingoose.__mocks[modelName].aggregate;\n\n    let err = null;\n\n    if (mock instanceof Error) {\n      err = mock;\n    }\n\n    if (typeof mock === 'function') {\n      mock = await mock(this);\n    }\n\n    if (cb) {\n      return cb(err, mock);\n    }\n\n    if (err) {\n      throw err;\n    }\n\n    return mock;\n  });\n\nconst instance = ['remove', 'save'];\n\ninstance.forEach(methodName => {\n  mongoose.Model.prototype[methodName] = jest\n    .fn()\n    .mockImplementation(function(options, cb) {\n      const op = methodName;\n      const { modelName } = this.constructor;\n\n      if (typeof options === 'function') {\n        cb = options;\n      }\n\n      Object.assign(this, { op, model: { modelName } });\n\n      const hooks = this.constructor.hooks;\n\n      return new Promise((resolve, reject) => {\n        hooks.execPre(op, this, [cb], err => {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          const ret = mockedReturn.call(this, cb);\n\n          if (cb) {\n            hooks.execPost(op, this, [ret], err2 => {\n              if (err2) {\n                reject(err2);\n                return;\n              }\n\n              resolve(ret);\n            });\n          } else {\n            ret\n              .then(ret2 => {\n                hooks.execPost(op, this, [ret2], err3 => {\n                  if (err3) {\n                    reject(err3);\n                    return;\n                  }\n\n                  resolve(ret2);\n                });\n              })\n              .catch(reject);\n          }\n        });\n      });\n    });\n});\n\njest.doMock('mongoose', () => mongoose);\n\n// extend a plain function, we will override it with the Proxy later\nconst proxyTarget = Object.assign(() => void 0, {\n  __mocks: {},\n  resetAll() {\n    this.__mocks = {};\n  },\n  toJSON() {\n    return this.__mocks;\n  },\n});\n\nconst getMockController = prop => {\n  return {\n    toReturn(o, op = 'find') {\n      proxyTarget.__mocks.hasOwnProperty(prop)\n        ? (proxyTarget.__mocks[prop][op] = o)\n        : (proxyTarget.__mocks[prop] = { [op]: o });\n\n      return this;\n    },\n\n    reset(op) {\n      if (op) {\n        delete proxyTarget.__mocks[prop][op];\n      } else {\n        delete proxyTarget.__mocks[prop];\n      }\n\n      return this;\n    },\n\n    toJSON() {\n      return proxyTarget.__mocks[prop] || {};\n    },\n  };\n};\n\nconst proxyTraps = {\n  get(target, prop) {\n    if (target.hasOwnProperty(prop)) {\n      return Reflect.get(target, prop);\n    }\n\n    return getMockController(prop);\n  },\n  apply: (target, thisArg, [prop]) => mockModel(prop),\n};\n\nconst mockingoose = new Proxy(proxyTarget, proxyTraps);\n\n/**\n * Returns a helper with which you can set up mocks for a particular Model\n */\nconst mockModel = (model) => {\n  const modelName = typeof model === 'function' ? model.modelName : model;\n  if (typeof modelName === 'string') {\n    return getMockController(modelName);\n  } else {\n    throw new Error('model must be a string or mongoose.Model');\n  }\n};\n\nmodule.exports = mockingoose;\n"],"file":"index.js"}