{"version":3,"sources":["../src/index.js"],"names":["mongoose","require","test","version","Promise","connect","jest","fn","mockImplementation","resolve","createConnection","mockReturnValue","model","bind","on","once","then","ops","mockedReturn","cb","op","modelName","_mongooseOptions","Model","mock","mockingoose","__mocks","err","Error","includes","Array","isArray","map","item","doc","e","validateSync","lean","rawResult","toObject","forEach","Query","prototype","criteria","options","callback","merge","arguments","length","undefined","exec","call","Aggregate","_model","aggregate","insertMany","arr","Object","assign","instance","methodName","constructor","hooks","reject","execPre","ret","execPost","err2","ret2","err3","doMock","proxyTarget","resetAll","toJSON","getMockController","prop","toReturn","o","hasOwnProperty","reset","proxyTraps","get","target","Reflect","apply","thisArg","mockModel","Proxy","module","exports"],"mappings":"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","sourcesContent":["const mongoose = require('mongoose');\n\nif (!/^5/.test(mongoose.version)) {\n  mongoose.Promise = Promise;\n}\n\nmongoose.connect = jest\n  .fn()\n  .mockImplementation(() => Promise.resolve());\n\nmongoose.createConnection = jest.fn().mockReturnValue({\n  catch() {\n    /* no op */\n  },\n  model: mongoose.model.bind(mongoose),\n  on: jest.fn(),\n  once: jest.fn(),\n  then(resolve) {\n    return Promise.resolve(resolve(this));\n  },\n});\n\nconst ops = [\n  'find',\n  'findOne',\n  'count',\n  'countDocuments',\n  'estimatedDocumentCount',\n  'distinct',\n  'findOneAndUpdate',\n  'findOneAndDelete',\n  'findOneAndRemove',\n  'findOneAndReplace',\n  'remove',\n  'update',\n  'updateOne',\n  'updateMany',\n  'deleteOne',\n  'deleteMany',\n  'save',\n  'aggregate',\n];\n\nconst mockedReturn = async function(cb) {\n  const {\n    op,\n    model: { modelName },\n    _mongooseOptions = {},\n  } = this;\n  const Model = mongoose.model(modelName);\n\n  let mock =\n    mockingoose.__mocks[modelName] && mockingoose.__mocks[modelName][op];\n\n  let err = null;\n\n  if (mock instanceof Error) {\n    err = mock;\n  }\n\n  if (typeof mock === 'function') {\n    mock = await mock(this);\n  }\n\n  if (!mock && op === 'save') {\n    mock = this;\n  }\n\n  if (\n    mock &&\n    !(mock instanceof Model) &&\n    ![\n      'remove',\n      'deleteOne',\n      'deleteMany',\n      'update',\n      'updateOne',\n      'updateMany',\n      'count',\n      'countDocuments',\n      'estimatedDocumentCount',\n      'distinct',\n    ].includes(op)\n  ) {\n    mock = Array.isArray(mock)\n      ? mock.map(item => new Model(item))\n      : new Model(mock);\n\n    if(op === 'insertMany') {\n      if(!Array.isArray(mock)) mock = [mock];\n\n      for(const doc of mock) {\n        const e = doc.validateSync();\n        if(e) throw e;\n      }\n    }\n\n    if (_mongooseOptions.lean || _mongooseOptions.rawResult) {\n      mock = Array.isArray(mock)\n        ? mock.map(item => item.toObject())\n        : mock.toObject();\n    }\n  }\n\n  if (cb) {\n    return cb(err, mock);\n  }\n\n  if (err) {\n    throw err;\n  }\n\n  return mock;\n};\n\nops.forEach(op => {\n  mongoose.Query.prototype[op] = jest\n    .fn()\n    .mockImplementation(function(criteria, doc, options, callback) {\n      if (\n        [\n          'find',\n          'findOne',\n          'count',\n          'countDocuments',\n          'remove',\n          'deleteOne',\n          'deleteMany',\n          'update',\n          'updateOne',\n          'updateMany',\n          'findOneAndUpdate',\n          'findOneAndRemove',\n          'findOneAndDelete',\n          'findOneAndReplace',\n        ].includes(op) &&\n        typeof criteria !== 'function'\n      ) {\n        // find and findOne can take conditions as the first paramter\n        // ensure they make it into the Query conditions\n        this.merge(criteria);\n      }\n\n      if (['distinct'].includes(op) && typeof doc !== 'function') {\n        // distinct has the conditions as the second parameter\n        this.merge(doc);\n      }\n\n      switch (arguments.length) {\n        case 4:\n        case 3:\n          if (typeof options === 'function') {\n            callback = options;\n            options = {};\n          }\n          break;\n        case 2:\n          if (typeof doc === 'function') {\n            callback = doc;\n            doc = criteria;\n            criteria = undefined;\n          }\n          options = undefined;\n          break;\n        case 1:\n          if (typeof criteria === 'function') {\n            callback = criteria;\n            criteria = options = doc = undefined;\n          } else {\n            doc = criteria;\n            criteria = options = undefined;\n          }\n      }\n\n      this.op = op;\n\n      if (!callback) {\n        return this;\n      }\n\n      return this.exec.call(this, callback);\n    });\n});\n\nmongoose.Query.prototype.exec = jest.fn().mockImplementation(function(cb) {\n  return mockedReturn.call(this, cb);\n});\n\nmongoose.Aggregate.prototype.exec = jest\n  .fn()\n  .mockImplementation(async function(cb) {\n    const {\n      _model: { modelName },\n    } = this;\n\n    let mock =\n      mockingoose.__mocks[modelName] &&\n      mockingoose.__mocks[modelName].aggregate;\n\n    let err = null;\n\n    if (mock instanceof Error) {\n      err = mock;\n    }\n\n    if (typeof mock === 'function') {\n      mock = await mock(this);\n    }\n\n    if (cb) {\n      return cb(err, mock);\n    }\n\n    if (err) {\n      throw err;\n    }\n\n    return mock;\n  });\n\nmongoose.Model.insertMany = jest\n  .fn()\n  .mockImplementation(function(arr, options, cb) {\n    const op = 'insertMany';\n    const { modelName } = this;\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = null;\n    } else {\n      this._mongooseOptions = options;\n    }\n\n    Object.assign(this, { op, model: { modelName }})\n    return mockedReturn.call(this, cb);\n  })\n\nconst instance = ['remove', 'save'];\n\ninstance.forEach(methodName => {\n  mongoose.Model.prototype[methodName] = jest\n    .fn()\n    .mockImplementation(function(options, cb) {\n      const op = methodName;\n      const { modelName } = this.constructor;\n\n      if (typeof options === 'function') {\n        cb = options;\n      }\n\n      Object.assign(this, { op, model: { modelName } });\n\n      const hooks = this.constructor.hooks;\n\n      return new Promise((resolve, reject) => {\n        hooks.execPre(op, this, [cb], err => {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          const ret = mockedReturn.call(this, cb);\n\n          if (cb) {\n            hooks.execPost(op, this, [ret], err2 => {\n              if (err2) {\n                reject(err2);\n                return;\n              }\n\n              resolve(ret);\n            });\n          } else {\n            ret\n              .then(ret2 => {\n                hooks.execPost(op, this, [ret2], err3 => {\n                  if (err3) {\n                    reject(err3);\n                    return;\n                  }\n\n                  resolve(ret2);\n                });\n              })\n              .catch(reject);\n          }\n        });\n      });\n    });\n});\n\njest.doMock('mongoose', () => mongoose);\n\n// extend a plain function, we will override it with the Proxy later\nconst proxyTarget = Object.assign(() => void 0, {\n  __mocks: {},\n  resetAll() {\n    this.__mocks = {};\n  },\n  toJSON() {\n    return this.__mocks;\n  },\n});\n\nconst getMockController = prop => {\n  return {\n    toReturn(o, op = 'find') {\n      proxyTarget.__mocks.hasOwnProperty(prop)\n        ? (proxyTarget.__mocks[prop][op] = o)\n        : (proxyTarget.__mocks[prop] = { [op]: o });\n\n      return this;\n    },\n\n    reset(op) {\n      if (op) {\n        delete proxyTarget.__mocks[prop][op];\n      } else {\n        delete proxyTarget.__mocks[prop];\n      }\n\n      return this;\n    },\n\n    toJSON() {\n      return proxyTarget.__mocks[prop] || {};\n    },\n  };\n};\n\nconst proxyTraps = {\n  get(target, prop) {\n    if (target.hasOwnProperty(prop)) {\n      return Reflect.get(target, prop);\n    }\n\n    return getMockController(prop);\n  },\n  apply: (target, thisArg, [prop]) => mockModel(prop),\n};\n\nconst mockingoose = new Proxy(proxyTarget, proxyTraps);\n\n/**\n * Returns a helper with which you can set up mocks for a particular Model\n */\nconst mockModel = (model) => {\n  const modelName = typeof model === 'function' ? model.modelName : model;\n  if (typeof modelName === 'string') {\n    return getMockController(modelName);\n  } else {\n    throw new Error('model must be a string or mongoose.Model');\n  }\n};\n\nmodule.exports = mockingoose;\n"],"file":"index.js"}