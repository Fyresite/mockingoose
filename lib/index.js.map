{"version":3,"sources":["../src/index.js"],"names":["Promise","connect","jest","fn","mockImplementation","resolve","createConnection","mockReturnValue","on","once","then","catch","model","ops","mockedReturn","cb","op","modelName","lean","_mongooseOptions","Model","mock","mockingoose","__mocks","err","Error","includes","Array","isArray","map","item","toObject","reject","forEach","Query","prototype","criteria","doc","options","callback","arguments","length","undefined","exec","call","save","constructor","Object","assign","doMock","target","resetAll","toJSON","traps","get","prop","hasOwnProperty","Reflect","toReturn","o","reset","Proxy"],"mappings":"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","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\n\nmongoose.Promise = Promise;\nmongoose.connect = jest.fn().mockImplementation(() => Promise.resolve());\nmongoose.createConnection = jest\n  .fn()\n  .mockReturnValue({\n    on: jest.fn(),\n    once: jest.fn(),\n    then(resolve) { return Promise.resolve(resolve(this)); },\n    catch() {},\n    model: mongoose.model,\n  });\n\nconst ops = [\n  'find',\n  'findOne',\n  'count',\n  'distinct',\n  'findOneAndUpdate',\n  'findOneAndRemove',\n  'remove',\n  'deleteOne',\n  'deleteMany',\n];\n\nconst mockedReturn = function (cb) {\n  const { op, model: { modelName }, _mongooseOptions: { lean } } = this;\n  const Model = mongoose.model(modelName);\n\n  let mock = mockingoose.__mocks[modelName] && mockingoose.__mocks[modelName][op];\n\n  let err = null;\n\n  if (mock instanceof Error) err = mock;\n\n  if (!mock && op === 'save') { mock = this;}\n\n  if (mock && mock instanceof Model === false && (!['update', 'count'].includes(op))) {\n    mock = Array.isArray(mock) ? mock.map(item => new Model(item)) : new Model(mock);\n\n    if(lean) mock = Array.isArray(mock) ? mock.map(item => item.toObject()) : mock.toObject();\n  }\n\n  if (cb) return cb(err, mock);\n\n  if (err) return Promise.reject(err);\n\n  return Promise.resolve(mock);\n};\n\nops.forEach(op => {\n  mongoose.Query.prototype[op] = jest.fn().mockImplementation(function (criteria, doc, options, callback) {\n    switch (arguments.length) {\n      case 3:\n        if (typeof options === 'function') {\n          callback = options;\n          options = {};\n        }\n        break;\n      case 2:\n        if (typeof doc === 'function') {\n          callback = doc;\n          doc = criteria;\n          criteria = undefined;\n        }\n        options = undefined;\n        break;\n      case 1:\n        if (typeof criteria === 'function') {\n          callback = criteria;\n          criteria = options = doc = undefined;\n        } else {\n          doc = criteria;\n          criteria = options = undefined;\n        }\n    }\n\n    this.op = op;\n\n    if (!callback) return this;\n\n    return this.exec.call(this, callback);\n  });\n});\n\nmongoose.Query.prototype.exec = jest.fn().mockImplementation(function cb(cb) {\n  return mockedReturn.call(this, cb);\n});\n\nmongoose.Model.prototype.save = function (options, cb) {\n  const op = 'save';\n  const { modelName } = this.constructor;\n\n  if (typeof options === 'function') cb = options;\n\n  Object.assign(this, { op, model: { modelName } });\n\n  return mockedReturn.call(this, cb);\n};\n\njest.doMock('mongoose', () => mongoose);\n\nconst target = {\n  __mocks: {},\n  resetAll() { this.__mocks = {}; },\n  toJSON() { return this.__mocks; },\n};\n\nconst traps = {\n  get(target, prop) {\n    if (target.hasOwnProperty(prop)) return Reflect.get(target, prop);\n\n    return {\n      toReturn(o, op = 'find') {\n        target.__mocks.hasOwnProperty(prop)\n          ? target.__mocks[prop][op] = o\n          : target.__mocks[prop] = { [op]: o };\n\n        return this;\n      },\n\n      reset(op) {\n        op && delete target.__mocks[prop][op] || delete target.__mocks[prop];\n\n        return this;\n      },\n\n      toJSON() {\n        return target.__mocks[prop] || {};\n      },\n    };\n  },\n};\n\nconst mockingoose = new Proxy(target, traps);\n\nexport default mockingoose;\n"]}